#include "ov.ovm"
#include "fb.ovm"
#include "identification.ovm"

LIBRARY propertyValueStatement
	VERSION   = "V0.1 (DD-Mon-YYYY)";
	AUTHOR    = "Torben Deppe";
	COPYRIGHT = "";
	COMMENT   = "";
	
 
	CLASS PropertyValueStatement : CLASS ov/domain
        IS_INSTANTIABLE;
        VARIABLES
            Value                  : ANY;
        END_VARIABLES;
        OPERATIONS
            getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
            constructor      :    C_FUNCTION    <OV_FNC_CONSTRUCTOR>;
        END_OPERATIONS;
    END_CLASS;  
    
    CLASS CarrierId : CLASS identification/Identification
        IS_INSTANTIABLE;
        VARIABLES
        END_VARIABLES;
        OPERATIONS
            getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
            constructor      :    C_FUNCTION    <OV_FNC_CONSTRUCTOR>;
        END_OPERATIONS;
    END_CLASS; 
    
    CLASS PropertyId : CLASS identification/Identification
        IS_INSTANTIABLE;
        VARIABLES
        END_VARIABLES;
        OPERATIONS
            getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
            constructor      :    C_FUNCTION    <OV_FNC_CONSTRUCTOR>;
        END_OPERATIONS;
    END_CLASS; 
    
    CLASS ExpressionLogic : CLASS ov/object
        IS_INSTANTIABLE;
        VARIABLES
        	ExpressionLogicEnum : UINT COMMENT = "0:GREATER_THAN, 1:GREATER_EQUAL, 2:EQUAL, 3:NOT_EQUAL, 4:LESS_EQUAL, 5:LESS_THAN";
        END_VARIABLES;
        OPERATIONS
            getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
            constructor      :    C_FUNCTION    <OV_FNC_CONSTRUCTOR>;
        END_OPERATIONS;
    END_CLASS; 
    
    CLASS ExpressionSemantic : CLASS ov/object
        IS_INSTANTIABLE;
        VARIABLES
        	ExpressionSemanticEnum : UINT COMMENT = "0:ASSURANCE, 1:SETTING, 2:MEASUREMENT, 3:REQUIREMENT";
        END_VARIABLES;
        OPERATIONS
            getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
            constructor      :    C_FUNCTION    <OV_FNC_CONSTRUCTOR>;
        END_OPERATIONS;
    END_CLASS; 

	CLASS PropertyValueStatementList : CLASS ov/domain
        IS_INSTANTIABLE;
        VARIABLES
        END_VARIABLES;
        OPERATIONS
            getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
            constructor      :    C_FUNCTION    <OV_FNC_CONSTRUCTOR>;
        END_OPERATIONS;
    END_CLASS; 
    
    
    CLASS MatchPVSRA : CLASS fb/functionblock
        IS_INSTANTIABLE;
        VARIABLES
            requirementPath : STRING FLAGS = "i" INITIALVALUE    =   "";
            assurancePath   : STRING FLAGS = "i" INITIALVALUE    =   "";
            match       : BOOL FLAGS = "o";
            matchText   : STRING FLAGS = "o" INITIALVALUE    =   "";
            error       : UINT FLAGS = "o";
            errortext   : STRING FLAGS = "o" INITIALVALUE    =   "";
        END_VARIABLES;
        OPERATIONS 
            matchPVSRA : C_FUNCTION <PVS_FNC_MATCHPVSRA>;
            typemethod : C_FUNCTION <FB_FNC_TYPEMETHOD>;
        END_OPERATIONS;
    END_CLASS;
    
    CLASS MatchPVSLRA : CLASS fb/functionblock
        IS_INSTANTIABLE;
        VARIABLES
            List1Path : STRING FLAGS = "i" INITIALVALUE    =   "";
            List2Path   : STRING FLAGS = "i" INITIALVALUE    =   "";
            match               : BOOL FLAGS = "o";
            matchText           : STRING FLAGS = "o" INITIALVALUE    =   "";
            error               : UINT FLAGS = "o";
            errortext           : STRING FLAGS = "o" INITIALVALUE    =   "";
        END_VARIABLES;
        OPERATIONS 
            matchPVSLRA : C_FUNCTION <PVS_FNC_MATCHPVSLRA>;
            typemethod : C_FUNCTION <FB_FNC_TYPEMETHOD>;
        END_OPERATIONS;
    END_CLASS;
    
	
END_LIBRARY;
