
/******************************************************************************
 *
 *   FILE
 *   ----
 *   shutDown.c
 *
 *   History
 *   -------
 *   2016-06-16   File created
 *
 *******************************************************************************
 *
 *   This file is generated by the 'acplt_builder' command
 *
 ******************************************************************************/


#ifndef OV_COMPILE_LIBRARY_opcua
#define OV_COMPILE_LIBRARY_opcua
#endif


#include "opcua.h"
#include "libov/ov_macros.h"
#include "libov/ov_string.h"


OV_DLLFNCEXPORT OV_RESULT opcua_shutDown_constructor(
		OV_INSTPTR_ov_object 	pobj
) {
	/*
	 *   local variables
	 */
	OV_INSTPTR_opcua_shutDown pinst = Ov_StaticPtrCast(opcua_shutDown, pobj);
	OV_RESULT    result;
	OV_STRING  Names [] = {"ack"};
	OV_STRING Descriptions [] = {"Are you sure?"};
	OV_INT Types [] = {OV_VT_STRING};
	OV_BOOL IsArray [] = {FALSE};
	OV_UINT Lengths [] = {0};


	/* do what the base class does first */
	result = ov_object_constructor(pobj);
	if(Ov_Fail(result))
		return result;

	/* do what */
	opcua_nodeStoreFunctions_setCallArgs(&(pinst->p_InputArguments), 1, Names, Descriptions, Types, IsArray, Lengths);
	opcua_nodeStoreFunctions_setCallArgs(&(pinst->p_OutputArguments), 0, NULL, NULL, NULL, NULL, NULL);

	return OV_ERR_OK;
}

OV_DLLFNCEXPORT OV_RESULT opcua_shutDown_calledMethod(
		OV_INSTPTR_opcua_methodNode pobj,
		size_t numberofInputArgs,
		const UA_Variant *packedInputArgList,
		size_t numberofOutputArgs,
		UA_Variant **packedOutputArgList
) {
	/*
	 *   local variables
	 */
	OV_ANY inputs[1];
	OV_ANY switchOff;
	OV_RESULT result;
	switchOff.value.vartype = OV_VT_BOOL;
	switchOff.value.valueunion.val_bool = FALSE;
	/*	set	- error handling is omitted here	*/
	result = opcua_nodeStoreFunctions_unpackCallArgs(1, packedInputArgList, inputs);
	if(inputs[0].value.vartype != OV_VT_STRING){
		return OV_ERR_BADPARAM;
	}
	if(ov_string_comparei(inputs[0].value.valueunion.val_string, "yes") == OV_STRCMP_EQUAL){
		result = ov_vendortree_setserverrun(&switchOff, NULL);
	} else {
		return OV_ERR_NOACCESS;
	}

	/*	no outputs...	*/
	return result;
}

