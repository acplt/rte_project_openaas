/******************************************************************************
 *
 *   FILE
 *   ----
 *   nodeStoreFunctions.c
 *
 *   History
 *   -------
 *   2014-10-21   File created
 *
 *******************************************************************************
 *
 *   This file is generated by the 'acplt_builder' command
 *
 ******************************************************************************/

#ifndef OV_COMPILE_LIBRARY_opcua
#define OV_COMPILE_LIBRARY_opcua
#endif

#include "libov/ov_macros.h"
#include "ksbase.h"
#include "opcua.h"
#include "opcua_helpers.h"
#include "NoneTicketAuthenticator.h"
#include "libov/ov_path.h"
#include "libov/ov_memstack.h"
#include "ks_logfile.h"

extern OV_INSTPTR_opcua_uaServer opcua_pUaServer;


OV_DLLFNCEXPORT UA_StatusCode opcua_nodeStoreFunctions_ovVariableNodeToOPCUA(
		void *handle, OV_INSTPTR_opcua_variableNode ovNode, UA_VariableNode* opcuaNode) {
	OV_INSTPTR_ov_object pchild;

	opcuaNode = ov_database_malloc(sizeof(UA_ObjectNode));
	copyOvQualifiedNameToOPCUA(&ovNode->p_browseName, &opcuaNode->browseName);
	copyOvLocalizedTextToOPCUA(&ovNode->p_description, &opcuaNode->description);
	copyOvLocalizedTextToOPCUA(&ovNode->p_displayName, &opcuaNode->displayName);
	copyOvNodeIdToOPCUA(&ovNode->p_nodeId, &opcuaNode->nodeId);

	opcuaNode->nodeClass = ovNode->v_nodeClass;
	opcuaNode->userWriteMask = ovNode->v_userWriteMask;
	opcuaNode->writeMask = ovNode->v_writeMask;

	//count references and copy them to ua node structure
	size_t size_references;
	Ov_ForEachChild(ov_containment,&ovNode->p_references,pchild) {
		size_references++;
	}
	opcuaNode->references = UA_Array_new(size_references,
			&UA_TYPES[UA_TYPES_REFERENCENODE]);
	opcuaNode->referencesSize = size_references;
	size_t i = 0;
	Ov_ForEachChild(ov_containment,&ovNode->p_references,pchild) {
		OV_INSTPTR_opcua_reference pref =
				Ov_DynamicPtrCast(opcua_reference,pchild);
		copyOvReferenceNodeToOPCUA(pref, &opcuaNode->references[i]);
	}

	//variable related fields
	//opcuaNode->dataType 			= ;
	//opcuaNode->valueRank 			= ;
	//opcuaNode->arrayDimensionsSize 	= ;
	//opcuaNode->arrayDimensions 		= ;
	//opcuaNode->valueSource 			= ;
	//opcuaNode->value.dataSource 	= ;
	//opcuaNode->value.data.value		= ;
	//opcuaNode->value.data.callback 	= ;

	//TODO
	//opcuaNode->value.value.
	return UA_STATUSCODE_GOOD;
}


