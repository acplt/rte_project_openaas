#include "ov.ovm"
//#include "ksbase.ovm"
#include "fb.ovm"
#include "opcua.ovm"
#include "ksapi.ovm"

LIBRARY openaas
	VERSION   = "V0.1 (DD-Mon-YYYY)";
    AUTHOR    = "Torben Deppe";
    COPYRIGHT = "";
    COMMENT   = "";
    
	/**
		Documentation of aas.
		@note Javadoc syntax is allowed here.
		@attention Changes in this file will only generate new code in ./source/sourcetemplates/. Code in ./source/ is not overwritten. 
	*/
	 
	CLASS PropertyValueStatement : CLASS ov/object
        IS_INSTANTIABLE;
        VARIABLES
        	ExpressionSemantic : INT 
        	   COMMENT = "0:ASSURANCE,1:SETTING,2:MEASUREMENT,,3:REQUIREMENT";
        	ExpressionLogic : INT 
        	   COMMENT = "0:GREATER_THAN,1:GREATER_EQUAL,2:EQUAL,3:NOT_EQUAL,4:LESS_EQUAL,5:LESS_THAN";
            Unit                   : STRING INITIALVALUE    =   "";
            Value                  : ANY;
            TimeStamp              : TIME;
            IDIdString               : STRING INITIALVALUE    =   "";
            IDIdType                 : UINT;
            View                   : INT
                COMMENT = "0:BUSINESS,1:CONSTRUCTION,2:POWER,3:FUNCTIONAL,4:LOCATION,5:SECURITY,6:NETWORK,7:LIFECYCLE,8:HUMAN";
            Visibility             : INT COMMENT = "0:PRIVAT,1:CONTRACT,2:PUBLIC";
        END_VARIABLES;
        OPERATIONS
        	getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
        END_OPERATIONS;
    END_CLASS; 
    
    
    CLASS LifeCycleEntry : CLASS ov/object
        IS_INSTANTIABLE;
        VARIABLES
            CreatingInstanceIdString  : STRING INITIALVALUE    =   "";
            CreatingInstanceIdType    : UINT;
            WritingInstanceIdString   : STRING INITIALVALUE    =   "";
            WritingInstanceIdType     : UINT;
            Data                    : ANY;
            TimeStamp               : TIME;
            Subject                 : STRING INITIALVALUE    =   "";
			EventClass              : STRING INITIALVALUE    =   "";
            Id                      : UINT;
        END_VARIABLES;
        OPERATIONS
        	getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
        END_OPERATIONS;
    END_CLASS;
    
    CLASS PropertyValueStatementList : CLASS ov/domain
    	IS_INSTANTIABLE;
        VARIABLES
            CarrierIdString  : STRING;
            CarrierIdType    : UINT;
            CreatingInstanceIdString : STRING;
            CreatingInstanceIdType : UINT;
            CreationTime : TIME;
        END_VARIABLES;
        OPERATIONS
        	getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
        END_OPERATIONS;
    END_CLASS; 
    
    CLASS LifeCycleArchive : CLASS ov/domain
    	IS_INSTANTIABLE;
    	VARIABLES
    		LifeCycleEntrySize : UINT;
    	END_VARIABLES;
    	OPERATIONS
    		getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
        END_OPERATIONS;
    END_CLASS;
    
    CLASS Header : CLASS ov/domain
        IS_INSTANTIABLE;
        VARIABLES
        END_VARIABLES;
        PARTS
        	Config : CLASS openaas/PropertyValueStatementList;
        END_PARTS;
        OPERATIONS
        END_OPERATIONS;
    END_CLASS;
	
	 
	CLASS aas : CLASS ov/domain
		IS_INSTANTIABLE;
		VARIABLES   
			postoffice           : STRING HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "JSON String as message communication" INITIALVALUE    =   "";
			lastReceivedMessage  : STRING COMMENT = "Last arrived and processed message" INITIALVALUE   =   "";
			lastSendMessage      : STRING COMMENT = "Last send message" INITIALVALUE    =   "";
			result               : UINT FLAGS = "o" INITIALVALUE = 0;
		END_VARIABLES;
		PARTS
			Header           : CLASS openaas/Header;
			Body             : CLASS ov/domain;
			LifeCycleArchive : CLASS openaas/LifeCycleArchive;
			Views            : CLASS ov/domain;			
		END_PARTS;
		OPERATIONS
			getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
		END_OPERATIONS;
	END_CLASS; 
	

    CLASS nodeStoreFunctions    :    CLASS ov/object
    	IS_INSTANTIABLE;
        COMMENT    =    "Implementations of nodestore functions to build up the interface between stack an ov-data";
    VARIABLES
        modelnamespace : C_TYPE <UA_Namespace>;
        interfacenamespace : C_TYPE <UA_Namespace>;
        IPAddressServer                 : STRING    COMMENT = "IP address of this server" INITIALVALUE    =   "";
        IPAddressAASDiscoveryServer     : STRING    COMMENT = "IP address of the AASDiscoveryServer" INITIALVALUE    =   "";
        ManagerNameAASDiscoveryServer   : STRING    COMMENT = "Manager Name of the AASDiscoveryServer" INITIALVALUE    =   "";
        PathToAASDiscoveryServer        : STRING    COMMENT = "Path to the AASDiscoveryServer" INITIALVALUE    =   "";
    END_VARIABLES;
    OPERATIONS
    	ovModelManagerNodeToOPCUA : C_FUNCTION <UA_FNC_OVMODELMANAGERNODETOOPCUA>;
    	ovModelManagerMethodNodeToOPCUA : C_FUNCTION <UA_FNC_OVMODELMANAGERMETHODNODETOOPCUA>;
        ovOpenAASNodeToOPCUA : C_FUNCTION <UA_FNC_OVOPENAASNODETOOPCUA>;
        ovOpenAASFolderNodeToOPCUA : C_FUNCTION <UA_FNC_OVOPENAASFOLDERNODETOOPCUA>;
        ovAASFolderNodeToOPCUA : C_FUNCTION <UA_FNC_OVAASFOLDERNODETOOPCUA>;
        ovLifeCycleArchiveNodeToOPCUA : C_FUNCTION <UA_FNC_OVLIFECYCLEARCHIVENODETOOPCUA>;
        ovLifeCycleEntryNodeToOPCUA : C_FUNCTION <UA_FNC_OVLIFECYCLEENTRYNODETOOPCUA>;
        ovPropertyValueStatementListNodeToOPCUA : C_FUNCTION <UA_FNC_OVPROPERTYVALUESTATEMENTLISTNODETOOPCUA>;
        ovPropertyValueStatementNodeToOPCUA : C_FUNCTION <UA_FNC_OVPROPERTYVALUESTATEMENTNODETOOPCUA>;
        ovViewsNodeToOPCUA : C_FUNCTION <UA_FNC_OVVIEWSNODETOOPCUA>;
        ovBodyNodeToOPCUA : C_FUNCTION <UA_FNC_OVBODYNODETOOPCUA>;
        ovHeaderNodeToOPCUA : C_FUNCTION <UA_FNC_OVHEADERNODETOOPCUA>;
        ovCarrierNodeToOPCUA : C_FUNCTION <UA_FNC_OVCARRIERNODETOOPCUA>;
         
        ovNodeStoreInterfaceOpenAASNew : C_FUNCTION <UA_FNC_OVNODESTOREINTERFACEOPENAASNEW>;
        ovNodeStoreInterfaceOpenAASDelete : C_FUNCTION <UA_FNC_OVNODESTOREINTERFACEOPENAASDELETE>;
        MethodCallbackStandard  : C_FUNCTION <UA_FNC_METHODCALLBACKSTANDARD>;
        
        constructor : C_FUNCTION <OV_FNC_CONSTRUCTOR>;
        startup: C_FUNCTION <OV_FNC_STARTUP>;
        destructor: C_FUNCTION <OV_FNC_DESTRUCTOR>;
        getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
    END_OPERATIONS;    
    END_CLASS;
    
    CLASS AASConvertListType : CLASS ov/object
        IS_INSTANTIABLE;
        VARIABLES
        	AASIdString : STRING;
            AASIdType   : UINT;
            AASPath     : STRING; 
        END_VARIABLES;
        OPERATIONS
        	getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
        END_OPERATIONS;
    END_CLASS;     
    
    CLASS modelmanager    :    CLASS ov/domain
        IS_INSTANTIABLE;
        COMMENT    =    "Implementations of model functions to act like a factory";
    VARIABLES 
    	AASIdString                     : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
    	AASIdType                       : UINT HAS_SET_ACCESSOR;
    	AASName                         : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
    	AASAssetIdString                : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        AASAssetIdType                  : UINT HAS_SET_ACCESSOR;    	
        AASStatus                       : UINT; 
    	AASCreate                       : BOOL      HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "Create an AAS";
    	AASDelete                       : BOOL      HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "Delete an AAS";   
    	 
    	PVSLAASIdString                 : STRING INITIALVALUE    =   "";
        PVSLAASIdType                   : UINT HAS_SET_ACCESSOR;
    	PVSLName                        : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
    	PVSLCarrierIdString             : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
    	PVSLCarrierIdType               : UINT HAS_SET_ACCESSOR;
    	PVSLCreatingInstanceIdString    : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        PVSLCreatingInstanceIdType      : UINT HAS_SET_ACCESSOR;   
        PVSLCreationTime                : TIME HAS_SET_ACCESSOR;      
    	PVSLStatus                      : UINT; 
    	PVSLCreate                      : BOOL     HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "Create a PVSL";
	    PVSLDelete                      : BOOL     HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "Delete a PVSL"; 
	    
	    PVSAASIdString                  : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        PVSAASIdType                    : UINT HAS_SET_ACCESSOR;
        PVSPVSLName                     : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
	    PVSName                         : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
	    PVSExpressionLogic              : INT HAS_SET_ACCESSOR     COMMENT = "0:GREATER_THAN,1:GREATER_EQUAL,2:EQUAL,3:NOT_EQUAL,4:LESS_EQUAL,5:LESS_THAN";
	    PVSExpressionSemantic           : INT HAS_SET_ACCESSOR     COMMENT = "0:ASSURANCE,1:SETTING,2:MEASUREMENT,,3:REQUIREMENT";
	    PVSValue                        : ANY HAS_SET_ACCESSOR;
	    PVSTimeStamp                    : TIME HAS_SET_ACCESSOR;
	    PVSUnit                         : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        PVSIDIdString                   : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        PVSIDIdType                     : UINT HAS_SET_ACCESSOR;
        PVSView                         : INT HAS_SET_ACCESSOR;     
        PVSVisibility                   : INT HAS_SET_ACCESSOR;
        PVSStatus                       : UINT;  
	    PVSCreate                       : BOOL     HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "Create a PVS";
        PVSDelete                       : BOOL     HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "Delete a PVS";
	    
	    LCEAASIdString                  : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        LCEAASIdType                    : UINT HAS_SET_ACCESSOR;
        LCEId                           : UINT HAS_SET_ACCESSOR;
	    LCECreatingInstanceIdString     : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        LCECreatingInstanceIdType       : UINT HAS_SET_ACCESSOR;
        LCEWritingInstanceIdString      : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        LCEWritingInstanceIdType        : UINT HAS_SET_ACCESSOR;
        LCEEventClass                   : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        LCESubject                      : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        LCEValue                        : ANY HAS_SET_ACCESSOR;
        LCETimeStamp                    : TIME HAS_SET_ACCESSOR;
        LCEStatus                       : UINT;
        LCECreate                       : BOOL     HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "Create a LCE";
        LCEDelete                       : BOOL     HAS_SET_ACCESSOR FLAGS = "i" COMMENT = "Delete a LCE";
               
	    Status                          : UINT; 
	    ListSize                        : UINT;
	    ListCount                       : UINT;           
    END_VARIABLES;
    OPERATIONS
        createAAS  : C_FUNCTION <UA_FNC_CREATEAAS>;
        deleteAAS  : C_FUNCTION <UA_FNC_DELETEAAS>;
        createPVSL : C_FUNCTION <UA_FNC_CREATEPVSL>;
        createPVSLTime : C_FUNCTION <UA_FNC_CREATEPVSLTIME>; 
        deletePVSL : C_FUNCTION <UA_FNC_DELETEPVSL>;
        createPVS  : C_FUNCTION <UA_FNC_CREATEPVS>;
        createPVSTime  : C_FUNCTION <UA_FNC_CREATEPVSTIME>;  
        deletePVS  : C_FUNCTION <UA_FNC_DELETEPVS>;
        getPVS     : C_FUNCTION <UA_FNC_GETPVS>;
        setPVS     : C_FUNCTION <UA_FNC_SETPVS>;
        createLCE  : C_FUNCTION <UA_FNC_CREATELCE>;
        deleteLCE  : C_FUNCTION <UA_FNC_DELETELCE>;
        getLCE     : C_FUNCTION <UA_FNC_GETLCE>;
        getLastLCEs: C_FUNCTION <UA_FNC_GETLASTLCES>;
        setLCE     : C_FUNCTION <UA_FNC_SETLCE>;
        getAASNodeId : C_FUNCTION <UA_FNC_GETAASNODEID>;
        getCoreData : C_FUNCTION <UA_FNC_GETCOREDATA>;
        triggerGetCoreData : C_FUNCTION <UA_FNC_TRIGGERGETCOREDATA>;
        startGetAssetLCEData : C_FUNCTION <UA_FNC_STARTGETASSETLCEDATA>;
        stopGetAssetLCEData : C_FUNCTION <UA_FNC_STOPGETASSETLCEDATA>;
        
        ovresultToAASStatusCode : C_FUNCTION <UA_FNC_OVRESULTTOAASSTATUSCODE>;
        AASConvertListGet : C_FUNCTION <OPENAAS_FNC_AASCONVERTLISTGET>;
        AASConvertListAdd : C_FUNCTION <OPENAAS_FNC_AASCONVERTLISTADD>;
        AASConvertListDelete : C_FUNCTION <OPENAAS_FNC_AASCONVERTLISTDELETE>;       
        
        getaccess        :    C_FUNCTION    <OV_FNC_GETACCESS>;
        constructor : C_FUNCTION <OV_FNC_CONSTRUCTOR>;
        destructor : C_FUNCTION <OV_FNC_DESTRUCTOR>;
        startup : C_FUNCTION <OV_FNC_STARTUP>;
    END_OPERATIONS;    
    END_CLASS;
    
   CLASS aasDI    :    CLASS fb/functionblock 
        IS_INSTANTIABLE;
    VARIABLES
        AssetIPAddress                  : STRING HAS_SET_ACCESSOR  INITIALVALUE    =   "";
        AssetAASIdString                : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        AssetAASIdType                  : UINT HAS_SET_ACCESSOR;
        AASIdString                     : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        AASIdType                       : UINT HAS_SET_ACCESSOR;
        StartAASDI                      : BOOL HAS_SET_ACCESSOR;
        StopAASDI                       : BOOL HAS_SET_ACCESSOR;
        Status                          : UINT;
    END_VARIABLES;
    OPERATIONS
        getaccess  : C_FUNCTION <OV_FNC_GETACCESS>;
        typemethod : C_FUNCTION <FB_FNC_TYPEMETHOD>;
    END_OPERATIONS;    
    END_CLASS;
    
    CLASS LCEGenerator    :    CLASS fb/functionblock 
        IS_INSTANTIABLE;
    VARIABLES
        AASIdString                     : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        AASIdType                       : UINT HAS_SET_ACCESSOR;
        LCECreatingInstanceIdString     : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        LCECreatingInstanceIdType       : UINT HAS_SET_ACCESSOR;
        LCEWritingInstanceIdString      : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        LCEWritingInstanceIdType        : UINT HAS_SET_ACCESSOR;
        LCEEventClass                   : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        LCESubject                      : STRING HAS_SET_ACCESSOR INITIALVALUE    =   "";
        LCEValue                        : ANY HAS_SET_ACCESSOR;
        StartLCEGenerator               : BOOL HAS_SET_ACCESSOR;
        StopLCEGenerator                : BOOL HAS_SET_ACCESSOR;
        State                           : UINT; 
        Generate                        : BOOL;                              
        Status                          : UINT;
    END_VARIABLES;
    OPERATIONS
        getaccess  : C_FUNCTION <OV_FNC_GETACCESS>;
        typemethod : C_FUNCTION <FB_FNC_TYPEMETHOD>;
    END_OPERATIONS;    
    END_CLASS;
    
    CLASS ExternalPostOffice    :    CLASS fb/functionblock 
        IS_INSTANTIABLE;
    VARIABLES
        postoffice           : STRING HAS_SET_ACCESSOR FLAGS = "i" INITIALVALUE    =   "";
        ReceiverAASIdString  : STRING INITIALVALUE    =   "";
        ReceiverAASIdType    : UINT;
        lastSendMessage      : STRING COMMENT = "Last send message" INITIALVALUE    =   "";
        tmpServerHost        : STRING INITIALVALUE    =   "";
        tmpManagerName       : STRING INITIALVALUE    =   "";
        tmpPath              : STRING INITIALVALUE    =   "";
        result               : UINT FLAGS = "o" INITIALVALUE = 0;
        state                : UINT;
    END_VARIABLES;
    OPERATIONS
        getaccess  : C_FUNCTION <OV_FNC_GETACCESS>;
        typemethod : C_FUNCTION <FB_FNC_TYPEMETHOD>;
    END_OPERATIONS;    
    END_CLASS;
  	
  	CLASS MatchPVSRA : CLASS fb/functionblock
  		IS_INSTANTIABLE;
  		VARIABLES
  		    requirementPath : STRING FLAGS = "i";
  		    assurancePath   : STRING FLAGS = "i";
  		    match       : BOOL FLAGS = "o";
  		    error       : UINT FLAGS = "o";
  		    errortext   : STRING FLAGS = "o";
  		END_VARIABLES;
  		OPERATIONS 
  			matchPVSRA : C_FUNCTION <OPENAAS_FNC_MATCHPVSRA>;
            typemethod : C_FUNCTION <FB_FNC_TYPEMETHOD>;
  		END_OPERATIONS;
  	END_CLASS;
  	
  	CLASS MatchPVSLRA : CLASS fb/functionblock
        IS_INSTANTIABLE;
        VARIABLES
            List1Path : STRING FLAGS = "i";
            List2Path   : STRING FLAGS = "i";
            match               : BOOL FLAGS = "o";
            matchText           : STRING FLAGS = "o";
            error               : UINT FLAGS = "o";
            errortext           : STRING FLAGS = "o";
        END_VARIABLES;
        OPERATIONS 
            matchPVSLRA : C_FUNCTION <OPENAAS_FNC_MATCHPVSLRA>;
            typemethod : C_FUNCTION <FB_FNC_TYPEMETHOD>;
        END_OPERATIONS;
    END_CLASS;
    
    CLASS FindAAS : CLASS fb/functionblock
        IS_INSTANTIABLE;
        VARIABLES
            AASID1STRING      : STRING FLAGS = "i";
            AASID1TYPE        : UINT FLAGS = "i";
            AASID2STRING      : STRING FLAGS = "i";
            AASID2TYPE        : UINT FLAGS = "i";
            FoundAAS1           : BOOL FLAGS = "o";
            FoundAAS2           : BOOL FLAGS = "o";
            NotFoundAAS1        : BOOL FLAGS = "o";
            NotFoundAAS2        : BOOL FLAGS = "o";
        END_VARIABLES;
        OPERATIONS 
            typemethod : C_FUNCTION <FB_FNC_TYPEMETHOD>;
        END_OPERATIONS;
    END_CLASS;
    
     CLASS FindPVSL : CLASS fb/functionblock
        IS_INSTANTIABLE;
        VARIABLES
            AASID1STRING      : STRING FLAGS = "i";
            AASID1TYPE        : UINT FLAGS = "i";
            AASID2STRING      : STRING FLAGS = "i";
            AASID2TYPE        : UINT FLAGS = "i";
            PVSL1Name         : STRING FLAGS = "i";
            PVSL2Name         : STRING FLAGS = "i";
            PVSL1             : STRING FLAGS = "o";
            PVSL2             : STRING FLAGS = "o";
        END_VARIABLES; 
        OPERATIONS 
            typemethod : C_FUNCTION <FB_FNC_TYPEMETHOD>;
        END_OPERATIONS;
    END_CLASS;
    
      CLASS HMIHelperPVSL    :    CLASS fb/functionblock
        IS_INSTANTIABLE;
    VARIABLES
        Path                 : STRING FLAGS = "i" INITIALVALUE    =   "";      
        ExpressionLogic      : STRING FLAGS = "o" INITIALVALUE    =   "";
        ExpressionSemantic   : STRING FLAGS = "o" INITIALVALUE    =   "";
        Name                 : STRING FLAGS = "o" INITIALVALUE    =   "";
        Unit                 : STRING FLAGS = "o" INITIALVALUE    =   "";
        Value                : STRING FLAGS = "o" INITIALVALUE    =   "";
        TimeStamp            : STRING FLAGS = "o" INITIALVALUE    =   "";
        View                 : STRING FLAGS = "o" INITIALVALUE    =   "";
        Visibility           : STRING FLAGS = "o" INITIALVALUE    =   "";
        IDType               : STRING FLAGS = "o" INITIALVALUE    =   "";
        IDSpecification      : STRING FLAGS = "o" INITIALVALUE    =   "";
    END_VARIABLES;
    OPERATIONS
        typemethod : C_FUNCTION <FB_FNC_TYPEMETHOD>;
    END_OPERATIONS;
    END_CLASS; 
  	
END_LIBRARY;
